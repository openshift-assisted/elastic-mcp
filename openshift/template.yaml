apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: elastic-mcp-server
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: elastic-mcp-server
  spec:
    selector:
      matchLabels:
        app: elastic-mcp-server
    replicas: ${{NUMBER_OF_REPLICAS}}
    template:
      metadata:
        labels:
          app: elastic-mcp-server
      spec:
        restartPolicy: Always
        serviceAccountName: elastic-mcp-proxy
        containers:
          - name: elastic-mcp-server
            image: ${IMAGE_NAME}:${IMAGE_TAG}
            imagePullPolicy: Always
            env:
            - name: OPENSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  key: ${ELASTIC_MCP_SECRET_UNAME}
                  name: ${ELASTIC_MCP_SECRET}
            - name: OPENSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: ${ELASTIC_MCP_SECRET_PASSWD}
                  name: ${ELASTIC_MCP_SECRET}
            - name: OPENSEARCH_URL
              valueFrom:
                secretKeyRef:
                  key: endpoint
                  name: ${ELASTIC_ENDPOINT_SECRET}
          - name: elastic-mcp-proxy
            image: ${OAUTH_IMAGE}:${OAUTH_IMAGE_TAG}
            imagePullPolicy: IfNotPresent
            ports:
            - containerPort: ${{OAUTH_PORT}}
              name: mcp-proxy-port
              protocol: TCP
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /oauth/healthz
                port: mcp-proxy-port
                scheme: HTTP
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
            resources:
              limits:
                cpu: 50m
                memory: 100Mi
              requests:
                cpu: 50m
                memory: 100Mi
            args:
            - --http-address=0.0.0.0:${OAUTH_PORT}
            - --provider=openshift
            - --openshift-service-account=elastic-mcp-proxy
            - --upstream=http://localhost:${MCP_SERVER_PORT}
            - --https-address=
            - --pass-basic-auth=false
            - --openshift-delegate-urls={"/mcp":{"resource":"elastic-mcp-proxy","verb":"get"}}
            - --openshift-sar={"namespace":"$(NAMESPACE)","resource":"services","resourceName":"elastic-mcp-proxy","verb":"get"}
            env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OAUTH2_PROXY_COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  key: ${SESSION_COOKIE_KEY}
                  name: ${SESSION_COOKIE_SECRET}

        
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: elastic-mcp-server
    name: elastic-mcp-proxy
  spec:
    ports:
    - port: ${{OAUTH_PORT}}
      protocol: TCP
      targetPort: ${{OAUTH_PORT}}
    selector:
      app: elastic-mcp-server
    sessionAffinity: None
    type: ClusterIP

parameters:
- name: IMAGE_NAME
  value: "quay.io/redhat-user-workloads/assisted-installer-tenant/elastic-mcp/elastic-mcp"
- name: IMAGE_TAG
  required: true
- name: NUMBER_OF_REPLICAS
  value: "1"
- name: MCP_SERVER_PORT
  value: "9901"
- name: ELASTIC_MCP_SECRET
  value: "elasitcsearch-mcp-server"
- name: SESSION_COOKIE_SECRET
  value: "elasitcsearch-mcp-server"
- name: SESSION_COOKIE_KEY
  value: "session-cookie"
- name: ELASTIC_MCP_SECRET_PASSWD
  value: "password"
- name: ELASTIC_MCP_SECRET_UNAME
  value: "username"
- name: ELASTIC_ENDPOINT_SECRET
  value: "assisted-installer-elasticsearch"
- name: ELASTIC_ENDPOINT_SECRET_KEY
  value: "endpoint"
- name: OAUTH_IMAGE
  value: "quay.io/openshift/origin-oauth-proxy"
- name: OAUTH_IMAGE_TAG
  value: "4.18.0"
- name: OAUTH_PORT
  value: "9900"